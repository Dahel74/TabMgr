/*------------------------------------------------------------------------------------------------------
 * 			ATTENTION : Les triggers ont été modifié afin de séparer la mise à jour des donné précalculé et
 *						les dates de modification. Tous les triggers sur les dates doivent commencer par le mot
 *						MajDate... afin qu'ils puissent être identifié facilement
 *						Dans ce fichier on ne doit pas toucher aux DateModification avec ces triggers.
 *						Ces alterations seront faites par les triggers regroupés dans "createTiggersMajDate"
 *------------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------------
 * Triggers pour le champs précalculé du nombre d'enfant pour père 
 *----------------------------------------------------------------------------------------------------*/

CREATE TRIGGER "ComputeEnfantsPereInsert"
AFTER INSERT ON Individus
FOR EACH ROW
WHEN NEW.CodePere != 0
BEGIN
    UPDATE Individus SET NombreEnfants=NombreEnfants+1 WHERE Individus.CodeID=NEW.CodePere ;
END;

CREATE TRIGGER "ComputeEnfantsPereUpdate"
AFTER UPDATE OF CodePere ON Individus
FOR EACH ROW
WHEN OLD.CodePere != NEW.CodePere
BEGIN
    UPDATE Individus SET NombreEnfants=NombreEnfants-1 WHERE Individus.CodeID=OLD.CodePere ;
    UPDATE Individus SET NombreEnfants=NombreEnfants+1 WHERE Individus.CodeID=NEW.CodePere ;
END;

CREATE TRIGGER "ComputeEnfantsPereDelete"
AFTER DELETE ON Individus
FOR EACH ROW
WHEN OLD.CodePere != 0
BEGIN
    UPDATE Individus SET NombreEnfants=NombreEnfants-1 WHERE Individus.CodeID=OLD.CodePere ;
END;

/*------------------------------------------------------------------------------------------------------
 * Triggers pour le champs précalculé du nombre d'enfant pour la mère 
 *----------------------------------------------------------------------------------------------------*/

CREATE TRIGGER "ComputeEnfantsMereInsert"
AFTER INSERT ON Individus
FOR EACH ROW
WHEN NEW.CodeMere != 0
BEGIN
    UPDATE Individus SET NombreEnfants=NombreEnfants+1 WHERE Individus.CodeID=NEW.CodeMere ;
END;

CREATE TRIGGER "ComputeEnfantsMereUpdate"
AFTER UPDATE OF CodeMere ON Individus
FOR EACH ROW
WHEN OLD.CodeMere != NEW.CodeMere
BEGIN
    UPDATE Individus SET NombreEnfants=NombreEnfants-1 WHERE Individus.CodeID=OLD.CodeMere ;
    UPDATE Individus SET NombreEnfants=NombreEnfants+1 WHERE Individus.CodeID=NEW.CodeMere ;
END;

CREATE TRIGGER "ComputeEnfantsMereDelete"
AFTER DELETE ON Individus
FOR EACH ROW
WHEN OLD.CodeMere != 0
BEGIN
    UPDATE Individus SET NombreEnfants=NombreEnfants-1 WHERE Individus.CodeID=OLD.CodeMere ;
END;

/*------------------------------------------------------------------------------------------------------
* Triggers pour le champs précalculé du nombre d'enfant pour l'union
*----------------------------------------------------------------------------------------------------*/

CREATE TRIGGER "ComputeEnfantsUnionInsert"
AFTER INSERT ON Individus
FOR EACH ROW
WHEN NEW.CodeUnionParents != 0
BEGIN
    UPDATE Unions SET NombreEnfants=NombreEnfants+1 WHERE Unions.CodeID=NEW.CodeUnionParents ;
END;

CREATE TRIGGER "ComputeEnfantsUnionUpdate"
AFTER UPDATE OF CodeUnionParents ON Individus
FOR EACH ROW
WHEN OLD.CodeUnionParents != NEW.CodeUnionParents
BEGIN
    UPDATE Unions SET NombreEnfants=NombreEnfants-1 WHERE Unions.CodeID=OLD.CodeUnionParents ;
    UPDATE Unions SET NombreEnfants=NombreEnfants+1 WHERE Unions.CodeID=NEW.CodeUnionParents ;
END;

CREATE TRIGGER "ComputeEnfantsUnionDelete"
AFTER DELETE ON Individus
FOR EACH ROW
WHEN OLD.CodeUnionParents != 0
BEGIN
    UPDATE Unions SET NombreEnfants=NombreEnfants-1 WHERE Unions.CodeID=OLD.CodeUnionParents ;
END;

/*------------------------------------------------------------------------------------------------------
* Triggers pour le champs précalculé du nombre de médias 
*----------------------------------------------------------------------------------------------------*/

CREATE TRIGGER "ComputeMediasInsert"
AFTER INSERT ON LiensMedias
FOR EACH ROW
BEGIN
    UPDATE Individus SET NombreMedias=NombreMedias+1 WHERE Individus.CodeID=NEW.XrefProprietaire ;
    UPDATE Evenements SET NombreMedias=NombreMedias+1 WHERE Evenements.CodeID=NEW.XrefProprietaire ;
    UPDATE Unions SET NombreMedias=NombreMedias+1 WHERE Unions.CodeID=NEW.XrefProprietaire ;
END;

CREATE TRIGGER "ComputeMediasUpdate"
AFTER UPDATE OF XrefProprietaire ON LiensMedias
FOR EACH ROW
WHEN OLD.XrefProprietaire != NEW.XrefProprietaire
BEGIN
    UPDATE Individus SET NombreMedias=NombreMedias-1 WHERE Individus.CodeID=OLD.XrefProprietaire ;
    UPDATE Individus SET NombreMedias=NombreMedias+1 WHERE Individus.CodeID=NEW.XrefProprietaire ;
    
    UPDATE Evenements SET NombreMedias=NombreMedias-1 WHERE Evenements.CodeID=OLD.XrefProprietaire ;
    UPDATE Evenements SET NombreMedias=NombreMedias+1 WHERE Evenements.CodeID=NEW.XrefProprietaire ;
    
    UPDATE Unions SET NombreMedias=NombreMedias-1 WHERE Unions.CodeID=OLD.XrefProprietaire ;
    UPDATE Unions SET NombreMedias=NombreMedias+1 WHERE Unions.CodeID=NEW.XrefProprietaire ;
END;

CREATE TRIGGER "ComputeMediasDelete"
AFTER DELETE ON LiensMedias
FOR EACH ROW
BEGIN
    UPDATE Individus SET NombreMedias=NombreMedias-1 WHERE Individus.CodeID=OLD.XrefProprietaire ;
    UPDATE Evenements SET NombreMedias=NombreMedias-1 WHERE Evenements.CodeID=OLD.XrefProprietaire ;
    UPDATE Unions SET NombreMedias=NombreMedias-1 WHERE Unions.CodeID=OLD.XrefProprietaire ;
END;

/*------------------------------------------------------------------------------------------------------*
 * Triggers pour le champs précalculé du nombre d'unions pour un individu                               *
 *------------------------------------------------------------------------------------------------------*/

CREATE TRIGGER "ComputeNombreUnionsIndividuInsert"
AFTER INSERT ON Unions
FOR EACH ROW
WHEN NEW.Epoux > 0 AND NEW.Epouse > 0
BEGIN
    UPDATE Individus SET NombreUnions=NombreUnions+1 WHERE Individus.CodeID = NEW.Epoux OR Individus.CodeID = NEW.Epouse ;
END;

CREATE TRIGGER "ComputeNombreUnionsIndividuUpdateOLD"
AFTER UPDATE OF Epoux, Epouse ON Unions
FOR EACH ROW
WHEN OLD.Epoux > 0 AND OLD.Epouse > 0
BEGIN
    UPDATE Individus SET NombreUnions=NombreUnions-1 WHERE Individus.CodeID = OLD.Epoux OR Individus.CodeID = OLD.Epouse ;
END;

CREATE TRIGGER "ComputeNombreUnionsIndividuUpdateNEW"
AFTER UPDATE OF Epoux, Epouse ON Unions
FOR EACH ROW
WHEN NEW.Epoux > 0 AND NEW.Epouse > 0
BEGIN
    UPDATE Individus SET NombreUnions=NombreUnions+1 WHERE Individus.CodeID = NEW.Epoux OR Individus.CodeID = NEW.Epouse ;
END;

CREATE TRIGGER "ComputeNombreUnionsIndividuDelete"
AFTER DELETE ON Unions
FOR EACH ROW
WHEN OLD.Epoux > 0 AND OLD.Epouse > 0
BEGIN
    UPDATE Individus SET NombreUnions=NombreUnions-1 WHERE Individus.CodeID = OLD.Epoux OR Individus.CodeID = OLD.Epouse ;
END;

/*------------------------------------------------------------------------------------------------------
 * Triggers pour le codeID de la note
*----------------------------------------------------------------------------------------------------*/

CREATE TRIGGER "ComputeNoteIndividuInsert"
AFTER INSERT ON Notes
FOR EACH ROW
WHEN NEW.CodeProprietaire != 0
BEGIN
    UPDATE Individus SET CodeNote=NEW.CodeID WHERE Individus.CodeID=NEW.CodeProprietaire AND NEW.TypeNote = 1 ;
    UPDATE Evenements SET CodeNote=NEW.CodeID WHERE Evenements.CodeID=NEW.CodeProprietaire ;
    UPDATE Unions SET CodeNote=NEW.CodeID WHERE Unions.CodeID=NEW.CodeProprietaire ;
END;

CREATE TRIGGER "ComputeNoteIndividuUpdate"
AFTER UPDATE OF CodeProprietaire ON Notes
FOR EACH ROW
WHEN OLD.CodeProprietaire != NEW.CodeProprietaire
BEGIN
    UPDATE Individus SET CodeNote=0 WHERE Individus.CodeID=OLD.CodeProprietaire AND OLD.TypeNote = 1 ;
    UPDATE Individus SET CodeNote=NEW.CodeID WHERE Individus.CodeID=NEW.CodeProprietaire AND NEW.TypeNote = 1 ;

    UPDATE Evenements SET CodeNote=0 WHERE Evenements.CodeID=OLD.CodeProprietaire ;
    UPDATE Evenements SET CodeNote=NEW.CodeID WHERE Evenements.CodeID=NEW.CodeProprietaire ;
    
    UPDATE Unions SET CodeNote=0 WHERE Unions.CodeID=OLD.CodeProprietaire ;
    UPDATE Unions SET CodeNote=NEW.CodeID WHERE Unions.CodeID=NEW.CodeProprietaire ;
END;

CREATE TRIGGER "ComputeNoteIndividuDelete"
AFTER DELETE ON Notes
FOR EACH ROW
WHEN OLD.CodeProprietaire != 0
BEGIN
    UPDATE Individus SET CodeNote=0 WHERE Individus.CodeID=OLD.CodeProprietaire AND OLD.TypeNote = 1 ;
    UPDATE Evenements SET CodeNote=0 WHERE Evenements.CodeID=OLD.CodeProprietaire ;
    UPDATE Unions SET CodeNote=0 WHERE Unions.CodeID=OLD.CodeProprietaire ;
END;

/*------------------------------------------------------------------------------------------------------
* Triggers pour le champs précalculé du nombre de source pour un événement ou individu
*----------------------------------------------------------------------------------------------------*/

CREATE TRIGGER "ComputeSourceInsertEvenement"
AFTER INSERT ON LiensSources
FOR EACH ROW
BEGIN
    UPDATE Evenements SET NombreSources=NombreSources+1 WHERE Evenements.CodeID=NEW.XrefProprietaire ;
    UPDATE Individus SET NombreSources=NombreSources+1 WHERE Individus.CodeID=NEW.XrefProprietaire ;
END;

CREATE TRIGGER "ComputeSourceUpdateEvenement"
AFTER UPDATE OF XrefProprietaire ON LiensSources
FOR EACH ROW
WHEN OLD.XrefProprietaire != NEW.XrefProprietaire
BEGIN
    UPDATE Evenements SET NombreSources=NombreSources-1 WHERE Evenements.CodeID=OLD.XrefProprietaire ;
    UPDATE Evenements SET NombreSources=NombreSources+1 WHERE Evenements.CodeID=NEW.XrefProprietaire ;
    UPDATE Individus SET NombreSources=NombreSources-1 WHERE Individus.CodeID=OLD.XrefProprietaire ;
    UPDATE Individus SET NombreSources=NombreSources+1 WHERE Individus.CodeID=NEW.XrefProprietaire ;
END;

CREATE TRIGGER "ComputeSourceDeleteEvenement"
AFTER DELETE ON LiensSources
FOR EACH ROW
BEGIN
    UPDATE Evenements SET NombreSources=NombreSources-1 WHERE Evenements.CodeID=OLD.XrefProprietaire ;
    UPDATE Individus SET NombreSources=NombreSources-1 WHERE Individus.CodeID=OLD.XrefProprietaire ;
END;

/*------------------------------------------------------------------------------------------------------
* Triggers pour le champs précalculé du nombre de témoins pour un événement 
*----------------------------------------------------------------------------------------------------*/

CREATE TRIGGER "ComputeTemoinsInsertEvenement"
AFTER INSERT ON LiensIndividus
FOR EACH ROW
BEGIN
    UPDATE Evenements SET NombreTemoins=NombreTemoins+1 WHERE Evenements.CodeID=NEW.XrefOrigine ;
END;

CREATE TRIGGER "ComputeTemoinsUpdateEvenement"
AFTER UPDATE OF XrefOrigine ON LiensIndividus
FOR EACH ROW
WHEN OLD.XrefOrigine != NEW.XrefOrigine
BEGIN
    UPDATE Evenements SET NombreTemoins=NombreTemoins-1 WHERE Evenements.CodeID=OLD.XrefOrigine ;
    UPDATE Evenements SET NombreTemoins=NombreTemoins+1 WHERE Evenements.CodeID=NEW.XrefOrigine ;
END;

CREATE TRIGGER "ComputeTemoinsDeleteEvenement"
AFTER DELETE ON LiensIndividus
FOR EACH ROW
BEGIN
    UPDATE Evenements SET NombreTemoins=NombreTemoins-1 WHERE Evenements.CodeID=OLD.XrefOrigine ;
END;

/*------------------------------------------------------------------------------------------------------
* Triggers pour le champs calculé typeProprietaire de la table liens source (0=evenement, 1=individu)
* Le défaut principal de ce trigger, c'est qu'il considére que c'est une source individuelle si ce
* n'est pas une source d'événement
*----------------------------------------------------------------------------------------------------*/

CREATE TRIGGER "ComputeTypeProprietaireInsertLienSource"
AFTER INSERT ON LiensSources
FOR EACH ROW
BEGIN
    UPDATE LiensSources
    SET TypeProprietaire =
    (
        CASE WHEN (SELECT COUNT(indi.CodeID) FROM Individus indi WHERE indi.CodeId = NEW.XrefProprietaire LIMIT 1 > 0)
                THEN 1
             WHEN (SELECT COUNT(event.CodeID) FROM Evenements event WHERE event.CodeId = NEW.XrefProprietaire LIMIT 1 > 0)
                THEN 0
             ELSE
                100
        END
    )
    WHERE CodeID = NEW.CodeID ;
END;

CREATE TRIGGER "ComputeTypeProprietaireUpdateLienSource"
AFTER UPDATE OF XrefProprietaire ON LiensSources
FOR EACH ROW
WHEN OLD.XrefProprietaire != NEW.XrefProprietaire
BEGIN
    UPDATE LiensSources
    SET TypeProprietaire =
    (
        CASE WHEN (SELECT COUNT(indi.CodeID) FROM Individus indi WHERE indi.CodeId = NEW.XrefProprietaire LIMIT 1 > 0)
                THEN 1
             WHEN (SELECT COUNT(event.CodeID) FROM Evenements event WHERE event.CodeId = NEW.XrefProprietaire LIMIT 1 > 0)
                THEN 0
             ELSE
                100
             END
    )
    WHERE CodeID = NEW.CodeID ;
END;

