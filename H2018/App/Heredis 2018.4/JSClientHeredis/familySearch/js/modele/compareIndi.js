function compareIndi(c,apiFS,apiHeredis){this.context=context,this.apiFS=apiFS,this.apiHeredis=apiHeredis}compareIndi.prototype.context=null,compareIndi.prototype.apiFS=null,compareIndi.prototype.apiHeredis=null,compareIndi.prototype.getEventsOfIndiHeredis=function(data){var events=new Array,viewManager=this.context.controller.getViewManager();if(""===data.pc.dateNaissance&&""===data.pc.lieuNaissance);else{var naissance={order:1,typeEvenement:viewManager.stringsLocalised.HNLOC_FS_COMPARE_VIEW_EVENTS_SUB_SECTION_PERSON_TITLE,typeEvt:"indi",indexEvt:0,type:"naissance",date:{original:"-"},place:{original:"-"}};naissance.date.original=data.pc.dateNaissance,naissance.place.original=data.pc.lieuNaissance,events.push(naissance)}if(""===data.pc.dateDeces&&""===data.pc.lieuDeces);else{var deces={order:2,typeEvenement:viewManager.stringsLocalised.HNLOC_FS_COMPARE_VIEW_EVENTS_SUB_SECTION_PERSON_TITLE,typeEvt:"indi",indexEvt:0,type:"deces",date:{original:"-"},place:{original:"-"}};deces.date.original=data.pc.dateDeces,deces.place.original=data.pc.lieuDeces,events.push(deces)}return data.pc.unions.length>0&&data.pc.unions.forEach(function(elt,index){var union={order:index,typeEvenement:viewManager.stringsLocalised.HNLOC_FS_COMPARE_VIEW_EVENTS_SUB_SECTION_COUPLE_TITLE,typeEvt:"union",indexEvt:1,type:elt.typeUnion,date:{original:"-"},place:{original:"-"}};""!==elt.dateUnion&&(union.date={original:elt.dateUnion}),""!==elt.lieuUnion&&(union.place={original:elt.lieuUnion}),events.push(union)}),events},compareIndi.prototype.compareEvtIndi=function(factsFs,heredisEventsInfo){this.controller.getFsApiCall();var viewManager=this.controller.getViewManager(),fields={typeEvt:{field:"date",type:"String"},typeEvt:{field:"lieu",type:"String"}};remoteDataEvtOptionFs={type:"evt",mode:"GET",tokenFs:"Bearer "+fsApiClient.getAccessToken(),columns:[{field:"type",title:"Type"},{field:"date",title:"Date"},{field:"lieu",title:"Lieu"},{field:"index",groupHeaderTemplate:'<span class="section" data-container="fsIndiEvtTab" data-type="#= items[0].typeEvt #" >#=items[0].category#</span>',hidden:!0}],data:dataGridFs},remoteDataEvtOptionHeredis={type:"evt",mode:"POST",columns:[{field:"type",title:"Type"},{field:"date",title:"Date"},{field:"lieu",title:"Lieu"},{field:"index",groupHeaderTemplate:'<span class="section" data-container="localIndiEvtTab" data-type="#= items[0].typeEvt #" >#=items[0].category#</span>',hidden:!0}],data:dataGridHeredis};var dataGridFs=this.formatDataEvt(factsFs,"fs"),dataGridHeredis=this.formatDataEvt(heredisEventsInfo,"heredis");this.compareEvts(dataGridFs,dataGridHeredis),viewManager.displayEventsCompareView(remoteDataEvtOptionFs,"fsIndiEvtTab",fields),viewManager.displayEventsCompareView(remoteDataEvtOptionHeredis,"localIndiEvtTab",fields)},compareIndi.prototype.compareRelativesIndi=function(fsRelatives){this.controller.getFsApiCall();var viewManager=this.controller.getViewManager(),heredisApiCall=this.controller.getHeredisApiCall(),fsFamilies=new Array,heredisFamilies=new Array,fieldsParentSpouse={nom:{field:"nom",type:"String"},fsID:{field:"fsID",type:"String"},dateBirth:{field:"dateBirth",type:"String"},dateDeath:{field:"dateDeath",type:"String"}},columnsTabParentSpouse=[{field:"nom",title:"Nom"},{field:"fsID",title:"fsid"},{field:"dateBirth",title:"Date de naissance"},{field:"dateDeath",title:"Date de décès"}],fieldsChildren={nom:{field:"nom",type:"String"},dateBirth:{field:"dateBirth",type:"String"},dateDeath:{field:"dateDeath",type:"String"},pere:{field:"pere",type:"String"},mere:{field:"mere",type:"String"},fsid:{field:"fsID",type:"String"}},columnTabChildren=[{field:"nom",width:"110px",title:"Nom"},{field:"fsid",width:"110px",title:"Fsid"},{field:"dateBirth",title:"Date de naissance"},{field:"dateDeath",title:"Date de décès"},{field:"pere",title:"Père"},{field:"mere",title:"Mère"}],parentsOrderIndex={Masculin:1,"Féminin":2};fsFamilies=[{titre:"Parents",type:"parents",mode:"GET",token:"Bearer "+fsApiClient.getAccessToken(),args:{},urlResource:fsRelatives.parents.href,columnTab:columnsTabParentSpouse,fields:fieldsParentSpouse,callbackSchema:function(resp){var parents=new Array;return void 0!==resp&&resp.persons.forEach(function(elt){var infoIndi={};infoIndi.nom=elt.display.name,infoIndi.fsID=elt.id,infoIndi.dateBirth=elt.display.birthDate,infoIndi.dateDeath=elt.display.deathDate,infoIndi.index=parentsOrderIndex[elt.display.gender],parents.push(infoIndi)}),parents}},{titre:"Conjoints",type:"spouses",mode:"GET",urlResource:fsRelatives.spouses.href,token:"Bearer "+fsApiClient.getAccessToken(),args:{},columnTab:columnsTabParentSpouse,fields:fieldsParentSpouse,callbackSchema:function(resp){var spouses=new Array;return void 0!==resp&&void 0!==resp.persons&&resp.persons.forEach(function(elt){var infoIndi={};infoIndi.nom=elt.display.name,infoIndi.fsID=elt.id,infoIndi.dateBirth=elt.display.birthDate,infoIndi.dateDeath=elt.display.deathDate,infoIndi.index=1,spouses.push(infoIndi)}),spouses}},{titre:" Enfants ",type:"children",mode:"GET",urlResource:fsRelatives.children.href,token:"Bearer "+fsApiClient.getAccessToken(),args:{},columnTab:columnTabChildren,fields:fieldsChildren,callbackSchema:function(resp){var children=new Array;return void 0!==resp&&void 0!==resp.persons&&resp.persons.forEach(function(elt){var infoIndi={};infoIndi.nom=elt.display.name,infoIndi.fsID=elt.id,infoIndi.dateBirth=elt.display.birthDate,infoIndi.dateDeath=elt.display.deathDate,infoIndi.index=1,resp.childAndParentsRelationships.forEach(function(rel){rel.child.resourceId===elt.id&&(void 0!==rel.father&&(infoIndi.pere=rel.father.resourceId),void 0!==rel.mother&&(infoIndi.mere=rel.mother.resourceId))}),children.push(infoIndi)}),children}}],heredisFamilies=[{titre:"Parents",type:"parents",mode:"POST",token:heredisApiCall.ajaxController.getToken(),urlResource:heredisApiCall.ajaxController.getBaseUrl()+"/libheredis/familySearch/getFamilies",args:{uuid:heredisApiCall.ajaxController.uuid,codeIDPC:this.mInfoPC.codeID,codeIDSpouses:this.mInfoPC.codeIdsSpouses,typeRsrc:"parents"},fields:fieldsParentSpouse,columnTab:columnsTabParentSpouse,callbackSchema:function(resp){var parents=new Array;return resp.forEach(function(elt){var indiFormate={};indiFormate.nom=elt.StrNomPrenomsTous,indiFormate.dateBirth=elt.strDateNaissancefd_lun_8_fev_1954,indiFormate.dateDeath=elt.strDateDecesfd_lun_8_fev_1954,indiFormate.fsID=elt.fsID,indiFormate.index=elt.index,parents.push(indiFormate)}),parents}},{titre:"Conjoints",type:"spouses",mode:"POST",token:heredisApiCall.ajaxController.getToken(),urlResource:heredisApiCall.ajaxController.getBaseUrl()+"/libheredis/familySearch/getFamilies",args:{uuid:heredisApiCall.ajaxController.uuid,codeIDPC:this.mInfoPC.codeID,codeIDSpouses:this.mInfoPC.codeIdsSpouses,typeRsrc:"spouses"},fields:fieldsParentSpouse,columnTab:columnsTabParentSpouse,callbackSchema:function(resp){var spouses=new Array;return resp.forEach(function(elt){var indiFormate={};indiFormate.nom=elt.StrNomPrenomsTous,indiFormate.dateBirth=elt.strDateNaissancefd_lun_8_fev_1954,indiFormate.dateDeath=elt.strDateDecesfd_lun_8_fev_1954,indiFormate.fsID=elt.fsID,spouses.push(indiFormate)}),spouses}},{titre:"Enfants",type:"children",mode:"POST",token:heredisApiCall.ajaxController.getToken(),urlResource:heredisApiCall.ajaxController.getBaseUrl()+"/libheredis/familySearch/getFamilies",args:{uuid:heredisApiCall.ajaxController.uuid,codeIDPC:this.mInfoPC.codeID,codeIDSpouses:this.mInfoPC.codeIdsSpouses,typeRsrc:"children"},fields:fieldsChildren,columnTab:columnTabChildren,callbackSchema:function(resp){var children=new Array;return resp.forEach(function(elt){var indiFormate={};indiFormate.nom=elt.StrNomPrenomsTous,indiFormate.dateBirth=elt.strDateNaissancefd_lun_8_fev_1954,indiFormate.dateDeath=elt.strDateDecesfd_lun_8_fev_1954,indiFormate.pere=elt.nomPere,indiFormate.mere=elt.nomMere,indiFormate.fsID=elt.fsID,children.push(indiFormate)}),children}}],viewManager.displayRelationShipCompareView(heredisFamilies,"localIndiRelationshipTab"),viewManager.displayRelationShipCompareView(fsFamilies,"fsIndiRelationshipTab")},compareIndi.prototype.compareEvts=function(a,b){var fsApiCall=this.controller.getFsApiCall(),viewManager=this.controller.getViewManager(),mapIndexOrderFacts=(fsApiCall.typeFactsRelationShips,fsApiCall.indexTypeFacts),mapTypeFactsIndi=fsApiCall.typeFactsPerson,mapTypeKeysFactIndi=Object.keys(mapTypeFactsIndi),mapTypeFactsUnion=fsApiCall.typeFactsRelationShips,mapTypeKeysFactUnion=Object.keys(mapTypeFactsUnion),compare=function(mapKeys,map,typeSection){if("indi"===typeSection)var indexEvt=0,typeEvenement=viewManager.stringsLocalised.HNLOC_FS_COMPARE_VIEW_EVENTS_SUB_SECTION_PERSON_TITLE;else if("union"===typeSection)indexEvt=1,typeEvenement=viewManager.stringsLocalised.HNLOC_FS_COMPARE_VIEW_EVENTS_SUB_SECTION_COUPLE_TITLE;mapKeys.forEach(function(elt){var found=!1;if(a.forEach(function(fsevt){void 0!==fsevt.type&&fsevt.type===map[elt]&&(found=!0)}),found){var foundInOtherTable=!1;if(b.forEach(function(heredisEvt){void 0!==heredisEvt.type&&heredisEvt.type===map[elt]&&(foundInOtherTable=!0)}),foundInOtherTable);else{var typeEvt=map[elt];b.push({typeEvt:typeEvt,type:" ",date:" ",lieu:" ",category:typeEvenement,index:indexEvt,order:mapIndexOrderFacts[typeEvt]})}}else{foundInOtherTable=!1;if(b.forEach(function(heredisEvt){void 0!==heredisEvt.type&&heredisEvt.type===map[elt]&&(foundInOtherTable=!0)}),foundInOtherTable){typeEvt=map[elt];a.push({typeEvt:typeEvt,type:" ",date:" ",lieu:" ",category:typeEvenement,index:indexEvt,order:mapIndexOrderFacts[typeEvt]})}}})};compare(mapTypeKeysFactIndi,mapTypeFactsIndi,"indi"),compare(mapTypeKeysFactUnion,mapTypeFactsUnion,"union")},compareIndi.prototype.formatDataEvt=function(evt,typeIndividu){var mapType=this.apiFS.typeFacts,mapTypeFactsIndi=this.apiFS.typeFactsPerson,mapTypeFactsRelationships=this.apiFS.typeFactsRelationShips,mapIndexOrderFacts=fsApiCall.indexTypeFacts,dataGrid=new Array;return Object.keys(mapType).forEach(function(elt){var type;type=mapType[elt],evt.forEach(function(elt){var date="",lieu="";if(void 0!==elt.date&&void 0!==elt.date.original&&(date=elt.date.original),void 0!==elt.place&&void 0!==elt.place.original&&(lieu=elt.place.original),"fs"===typeIndividu)if(void 0!==mapTypeFactsIndi[elt.type]&&mapTypeFactsIndi[elt.type]===type){var typeEvt=mapTypeFactsIndi[elt.type],indexEvt=0,typeEvenement=viewManager.stringsLocalised.HNLOC_FS_COMPARE_VIEW_EVENTS_SUB_SECTION_PERSON_TITLE;dataGrid.push({typeEvt:typeEvt,type:typeEvt,date:date,lieu:lieu,category:typeEvenement,index:indexEvt,order:mapIndexOrderFacts[typeEvt]})}else void 0!==mapTypeFactsRelationships[elt.type]&&mapTypeFactsRelationships[elt.type]===type&&(typeEvt=mapTypeFactsIndi[elt.type],indexEvt=1,typeEvenement=viewManager.stringsLocalised.HNLOC_FS_COMPARE_VIEW_EVENTS_SUB_SECTION_COUPLE_TITLE,dataGrid.push({typeEvt:typeEvt,type:typeEvt,date:date,lieu:lieu,category:typeEvenement,index:indexEvt,order:mapIndexOrderFacts[typeEvt]}));else"heredis"===typeIndividu&&void 0!==elt.type&&elt.type===type&&dataGrid.push({typeEvt:elt.type,type:elt.type,date:date,lieu:lieu,category:elt.typeEvenement,index:elt.indexEvt,order:mapIndexOrderFacts[elt.type]})})}),dataGrid};