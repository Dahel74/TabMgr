function importBranche(context,parameters,apiFS,apiHeredis){this.importController=context,this.rootFsid=parameters.fsid,this.apiFS=apiFS,this.apiHeredis=apiHeredis,this.parameters=parameters,this.parameters.nbGenAsc--,this.parameters.nbGenDesc--,this.parameters.nbGenDesc>0&&(this.parameters.nbGenDesc=-this.parameters.nbGenDesc),this.directAscendantsId=[],this.conjointsId=[],this.devGenMin=0,this.devGenMax=0,this.isStoppedByInternalError=!1,this.results={rootFsid:this.rootFsid,persons:{},unions:{},kinship:{},importAltNames:parameters.alternateNames}}importBranche.prototype.importController=null,importBranche.prototype.rootFsid=null,importBranche.prototype.apiFS=null,importBranche.prototype.apiHeredis=null,importBranche.prototype.nbGenerationsCollateraux=0,importBranche.prototype.nbIndividusExportes=0,importBranche.prototype.isStoppedByInternalError=!1,importBranche.prototype.stateImport="",importBranche.prototype.dataImport=null,importBranche.prototype.parameters={nbGenAsc:4,nbGenDesc:-4,ancestorsChildren:!1,alternateNames:!1},importBranche.prototype.results={rootFsid:"none",persons:{},unions:{},kinship:{},importAltNames:!1},importBranche.prototype.getInfoPerson=function(data,fsid,currentGen){var indi=data.persons[0],personObject={generation:currentGen};return personObject.places=data.places,personObject.sourceDescriptions=data.sourceDescriptions,personObject.relationships=data.relationships,personObject.childAndParentsRelationships=data.childAndParentsRelationships,personObject.mainInfo=indi,personObject.notes=data.notes,personObject},importBranche.prototype.traiteConjoints=function(){var self=this;this.conjointsId.forEach(function(element){var jKinship=self.results.kinship[element],personsKeys=Object.keys(self.results.persons);if(void 0!==jKinship){var jChildrenId=jKinship.childrenId;if(void 0!==jChildrenId&&0===jChildrenId.length){var jRelationships=self.results.persons[element].childAndParentsRelationships;void 0!==jRelationships&&jRelationships.forEach(function(aRelation){var childFsid=aRelation.child.resourceId;if("L4NR-4F8"===element&&"L41G-9RK"===childFsid){90}if(childFsid!==element&&-1!==$.inArray(childFsid,personsKeys)){var jChild=self.results.kinship[childFsid],isPere=!1,found=!1;void 0!==aRelation.father&&aRelation.father.resourceId===element?void 0===jChild.fatherId&&(found=!0,isPere=!0):void 0!==aRelation.mother&&aRelation.mother.resourceId===element&&void 0===jChild.motherId&&(found=!0),found&&(void 0===self.results.kinship[element].childrenId&&(self.results.kinship[element].childrenId=[]),self.results.kinship[element].childrenId.push(childFsid),isPere?self.results.kinship[childFsid].fatherId=element:self.results.kinship[childFsid].motherId=element)}})}}})},importBranche.prototype.getRootPersonInfo=function(callback){console.log("processing ...");var self=this,timeBegin=new Date;self.getRootKinship(this.rootFsid,function(data){if(self.importController.isImportCancelled)console.log("Cancelled"),callback("cancel","");else{self.traiteConjoints();var nbIndis=Object.keys(self.results.persons).length,strCollateraux=self.parameters.ancestorsChildren?"- collat":"";self.importController.startSaveToLibImport(),console.log("Success fsid "+self.rootFsid+"-Asc"+(self.parameters.nbGenAsc+1)+"-Desc"+(Math.abs(self.parameters.nbGenDesc)+1)+strCollateraux+" - "+nbIndis+" indis");var timeEnd=new Date;console.log("Temps total : ",(timeEnd.getTime()-timeBegin.getTime())/1e3+" sec."),self.apiHeredis.importBranch(encodeURIComponent(JSON.stringify(self.results)),function(retour){self.importController.successSaveToLibImport(retour.nbImportedIndis),self.stateImport="success",self.dataImport=retour,callback("success",retour)})}})},importBranche.prototype.getRootKinship=function(fsid,callback){var self=this;-1===$.inArray(fsid,self.directAscendantsId)&&self.directAscendantsId.push(fsid),this.getPersonInfoById(this.rootFsid,0,!0,!1,!1,function(data){self.getPersonInfoById(self.rootFsid,0,!1,!0,!0,function(retour){callback()})})},importBranche.prototype.getPersonInfoById=function(fsid,currentGen,importParents,importUnions,importChildren,callback){var self=this,viewManager=self.importController.viewUtilsController;if(self.importController.isImportCancelled)callback(fsid);else{currentGen>this.devGenMax&&(this.devGenMax=currentGen),currentGen<this.devGenMin&&(this.devGenMin=currentGen);var searchKinship=function(indiJson,currentGen,inDirectLine,importParents,importUnions,importChildren,retour){if(" L551-GZB"===fsid);var parentsOk=!0,unionsOk=!0,childrenOk=!0;if(importParents&&(parentsOk=!1),importUnions&&(unionsOk=!1),importChildren&&(childrenOk=!1),currentGen<self.parameters.nbGenAsc&&!parentsOk?(self.results.kinship[fsid].parentsDone=!0,self.getParents(fsid,currentGen,importParents,function(){parentsOk=!0,!0===unionsOk&&1==childrenOk&&retour("parents")})):(parentsOk=!0,self.results.kinship[fsid].parentsDone=!0,unionsOk&&childrenOk&&retour("pas de parents")),unionsOk||(self.results.kinship[fsid].unionsDone=!0,self.getUnions(fsid,currentGen,function(){unionsOk=!0,!0===parentsOk&&1==childrenOk&&retour("unions")})),!childrenOk){if("KHSB-7MF"===fsid)0;self.results.kinship[fsid].childrenDone=!0,self.getChildren(fsid,currentGen,function(){childrenOk=!0,!0===parentsOk&&1==unionsOk&&retour("enfants")})}},parentsDone=!importParents,unionsDone=!importUnions,childrenDone=!importChildren,indiExists=!1;if(void 0!==self.results.persons[fsid]){indiExists=!0;var links=(parentsDone||void 0===self.results.kinship[fsid].parentsDone||(parentsDone=!0),unionsDone||void 0===self.results.kinship[fsid].unionsDone||(unionsDone=!0),childrenDone||0===self.results.kinship[fsid].childrenId.length||(childrenDone=!0),{parentsOk:parentsDone,unionsOK:unionsDone,childrenOk:childrenDone});parentsDone=links.parentsOk,unionsDone=links.unionsOK,childrenDone=links.childrenOk}var shouldImportParents=importParents&&!parentsDone&&-1!==$.inArray(fsid,self.directAscendantsId),shouldImportUnions=importUnions&&!unionsDone,shouldImportChildren=importChildren&&!childrenDone;indiExists?shouldImportParents||shouldImportUnions||shouldImportChildren?searchKinship(self.results.persons[fsid],currentGen,$.inArray(fsid,self.directAscendantsId),shouldImportParents,shouldImportUnions,shouldImportChildren,function(data){callback(fsid)}):callback(fsid):this.apiFS.getPersonByIdFullObject(fsid,function(data){if(void 0===self.results.persons[fsid]){var person=self.getInfoPerson(data,fsid,currentGen);self.results.persons[fsid]=person,self.results.kinship[fsid]={},self.results.kinship[fsid].unionsId=[],self.results.kinship[fsid].childrenId=[],self.nbIndividusExportes=self.nbIndividusExportes+1,self.importController.isImportCancelled||self.importController.updateProgressImport(data.persons[0].display.name,self.nbIndividusExportes);var cpt=Object.keys(self.results.persons).length;cpt%10==0&&(console.log("TOTAL INDIS : "+cpt),console.log("Gen MAX = "+self.devGenMax+" - Gen MIN : "+self.devGenMin))}searchKinship(0,currentGen,$.inArray(fsid,self.directAscendantsId),shouldImportParents,shouldImportUnions,shouldImportChildren,function(data){callback(fsid)})},function(error){401===error?self.importController.viewUtilsController.aux.refreshToken(function(){self.getRootPersonInfo(callback)}):fsid===self.rootFsid?(self.importController.closeProgressionView("#progressionModalView"),self.importController.logErrorImport(error,fsid),self.apiHeredis.importFamilySearch("cancel","")):self.importController.logErrorImport(error,fsid)},function(){self.isStoppedByInternalError=!0,viewManager.showContinueButtonImport()})}},importBranche.prototype.getParents=function(fsid,currentGen,importParents,callback){var self=this,parentsId=new Array,viewManager=self.importController.viewUtilsController,currentPerson=this.results.persons[fsid];void 0!==currentPerson.childAndParentsRelationships?this.apiFS.getPreferredParents(fsid,function(preferedParentsId){for(var pereId="",mereId="",i=0;i<currentPerson.childAndParentsRelationships.length;i++){var elt=currentPerson.childAndParentsRelationships[i];if(elt.child.resourceId===fsid){if(""!==preferedParentsId&&preferedParentsId!==elt.id)continue;void 0!==elt.father&&(pereId=elt.father.resourceId),""!==pereId&&(parentsId.push(pereId),-1===$.inArray(pereId,self.directAscendantsId)&&self.directAscendantsId.push(pereId)),void 0!==elt.mother&&(mereId=elt.mother.resourceId),""!==mereId&&(parentsId.push(mereId),-1===$.inArray(mereId,self.directAscendantsId)&&self.directAscendantsId.push(mereId));break}}if(parentsId.length>0)for(var done=0,j=0;j<parentsId.length;j++)self.getPersonInfoById(parentsId[j],currentGen+1,importParents,!0,self.parameters.ancestorsChildren,function(parentFsid){parentFsid===pereId?self.results.kinship[fsid].fatherId=parentFsid:self.results.kinship[fsid].motherId=parentFsid,++done===parentsId.length&&callback()});else callback()},function(){self.isStoppedByInternalError=!0,viewManager.showContinueButtonImport()}):callback()},importBranche.prototype.getUnions=function(fsid,currentGen,callback){var self=this,infoUnions=new Array,currentPerson=this.results.persons[fsid];if(void 0!==currentPerson.relationships){for(var i=0;i<currentPerson.relationships.length;i++){var elt=currentPerson.relationships[i];if("http://gedcomx.org/Couple"===elt.type){var fsidOfUnions=Object.keys(self.results.unions);if(-1===$.inArray(elt.id,fsidOfUnions)){var conjointId=elt.person1.resourceId===fsid?elt.person2.resourceId:elt.person1.resourceId;infoUnions.push({conjointId:conjointId,unionId:elt.id}),self.results.unions[elt.id]=elt}}}if(infoUnions.length>0)for(var done=0,j=0;j<infoUnions.length;j++)self.getPersonInfoById(infoUnions[j].conjointId,currentGen,!1,!1,!1,function(conjointFsid){self.importController.isImportCancelled||infoUnions.forEach(function(aInfoUnion){aInfoUnion.conjointId==conjointFsid&&(self.results.kinship[fsid].unionsId.push(aInfoUnion.unionId),-1===$.inArray(aInfoUnion.unionId,self.results.kinship[conjointFsid].unionsId)&&self.results.kinship[conjointFsid].unionsId.push(aInfoUnion.unionId),-1===$.inArray(conjointFsid,self.conjointsId)&&self.conjointsId.push(conjointFsid))}),++done===infoUnions.length&&callback()});else callback()}else callback()},importBranche.prototype.getChildren=function(fsid,currentGen,callback){var self=this;if(!self.parameters.ancestorsChildren&&currentGen>0)callback();else if(currentGen<=self.parameters.nbGenDesc)callback();else if(currentGen>=0&&-1===$.inArray(fsid,self.directAscendantsId))callback();else{var children={},currentPerson=this.results.persons[fsid];if(void 0!==currentPerson.childAndParentsRelationships){if("L551-GZB"===fsid){19}for(var i=0;i<currentPerson.childAndParentsRelationships.length;i++){var elt=currentPerson.childAndParentsRelationships[i];if("L4NR-4F8"===fsid){90}var hasPere=void 0!==elt.father&&elt.father.resourceId===fsid,hasMere=void 0!==elt.mother&&elt.mother.resourceId===fsid;(hasPere||hasMere)&&(children[elt.child.resourceId]={childId:elt.child.resourceId,isFather:hasPere})}var objKeys=Object.keys(children);if(objKeys.length>0){if("KHSB-7MF"===fsid)0;var cpt=0,childrenRecursive=function(){self.getPersonInfoById(objKeys[cpt],currentGen-1,!1,!0,!0,function(enfantFsid){self.results.kinship[fsid].childrenId.push(children[enfantFsid]),++cpt===objKeys.length?callback():childrenRecursive()})};childrenRecursive()}else callback()}else callback()}};