function fsApiUtils(a,environment,appKey,hostNameApiUrls){this.ajaxController=a,this.cache={},""!==hostNameApiUrls.apiNameHost_production&&""!==hostNameApiUrls.apiNameHost_beta&&""!==hostNameApiUrls.apiNameHost_default&&(FamilySearch.prototype.platformHost=function(){switch(this.environment){case"production":return hostNameApiUrls.apiNameHost_production;case"beta":return hostNameApiUrls.apiNameHost_beta;default:return hostNameApiUrls.apiNameHost_default}}),""!==hostNameApiUrls.identHost_production&&""!==hostNameApiUrls.identHost_beta&&""!==hostNameApiUrls.identHost_default&&(FamilySearch.prototype.identHost=function(){switch(this.environment){case"production":return hostNameApiUrls.identHost_production;case"beta":return hostNameApiUrls.identHost_beta;default:return hostNameApiUrls.identHost_default}}),fsApiClient=new FamilySearch({appKey:appKey,environment:environment,debug:!0,auto_signin:!0,save_access_token:!0})}fsApiUtils.prototype.typeFacts={"http://gedcomx.org/Birth":"naissance","http://gedcomx.org/Death":"deces","http://gedcomx.org/Marriage":"Mariage","http://gedcomx.org/Divorce":"Séparation"},fsApiUtils.prototype.typeFactsPerson={"http://gedcomx.org/BarMitzvah":"barmitzvah","http://gedcomx.org/Birth":"naissance","http://gedcomx.org/Death":"deces","http://gedcomx.org/Burial":"inhumation","http://gedcomx.org/Ethnicity":"ethnicite","http://gedcomx.org/Christening":"christianisation"},fsApiUtils.prototype.typeFactsRelationShips={"http://gedcomx.org/Marriage":"Mariage","http://gedcomx.org/Divorce":"Séparation","http://gedcomx.org/CommonLawMarriage":"Mariage civil"},fsApiUtils.prototype.indexTypeFacts={naissance:1,deces:2,Mariage:1,"Séparation":2,autres:4},fsApiUtils.prototype.sexeEnumFs={109:"male",102:"female",63:"~"},fsApiUtils.prototype.ajaxController=null,fsApiUtils.prototype.PageSearchSize=20,fsApiUtils.prototype.nbAppels=0,fsApiUtils.prototype.nbRetours=0,fsApiUtils.prototype.nb200=0,fsApiUtils.prototype.currentUser=null,fsApiUtils.prototype.platformHostObject=null,fsApiUtils.prototype.abortAllPendingRequests=function(callback){this.ajaxController.abortAll(callback)},fsApiUtils.prototype.getPersonById=function(pid,callback,errorCallback,context){""===pid?errorCallback(context):fsApiClient.get("/platform/tree/persons/"+pid,function(error,Gdata){200===Gdata.statusCode?void 0!==Gdata.data&&void 0!==Gdata.data.persons&&Gdata.data.persons.forEach(function(elt){elt.id===pid&&(elt.etag=Gdata.headers.etag,void 0!==callback&&200===Gdata.statusCode&&callback(!0,elt))}):404===Gdata.statusCode||403===Gdata.statusCode?(console.log("person not found"),void 0!==errorCallback&&errorCallback(Gdata.statusCode,pid)):401===Gdata.statusCode?(console.log("token expired"),void 0!==errorCallback&&errorCallback(Gdata.statusCode,pid)):410===Gdata.statusCode||301===Gdata.statusCode?(console.log("person gone or merged"),void 0!==errorCallback&&errorCallback(Gdata.statusCode,pid)):503===Gdata.statusCode?(console.log("service unavailable"),void 0!==errorCallback&&errorCallback(Gdata.statusCode,pid)):500===Gdata.satusCode?(console.log("internal server error"),void 0!==errorCallback&&errorCallback(Gdata.statusCode,pid)):504===Gdata.statusCode?(console.log("server timeout"),void 0!==errorCallback&&errorCallback(Gdata.statusCode,pid)):(console.log("another error unhandle , error code : "+Gdata.statusCode),void 0!==errorCallback&&errorCallback(Gdata.statusCode,pid))})},fsApiUtils.prototype.getPersonByIdFullObject=function(pid,callback,errorCallback,noInternetCallback){if(""===pid)errorCallback();else{var self=this;self.nbAppels%10==0&&(console.log("Appels : "+self.nbAppels),self.nbAppels>0&&console.timeEnd("10_calls"),console.time("10_calls")),self.nbAppels++,fsApiClient.get("/platform/tree/persons/"+pid+"?sourceDescriptions=",function(error,Gdata){if(void 0!==error)console.log("no internet"),noInternetCallback();else{if(self.nbRetours++,self.nbRetours%10==0){var diff=self.nbAppels-self.nbRetours;console.log("Retours : "+self.nbRetours+" - différence : "+diff),console.log("OK : "+self.nb200+".")}200===Gdata.statusCode?void 0!==Gdata.data&&(self.nb200++,self.getNotesByPersonId(pid,function(lesNotes){Gdata.data.notes=lesNotes,callback(Gdata.data)})):404===Gdata.statusCode||403===Gdata.statusCode?(console.log("person not found"),void 0!==errorCallback&&errorCallback(Gdata.statusCode,pid)):401===Gdata.statusCode?(console.log("token expired"),void 0!==errorCallback&&errorCallback(Gdata.statusCode)):400===Gdata.statusCode?(console.log("bad request"),void 0!==errorCallback&&errorCallback(Gdata.statusCode)):429===Gdata.statusCode?console.log(Gdata.statusCode):(console.log("bad request"),void 0!==errorCallback&&errorCallback(Gdata.statusCode))}})}},fsApiUtils.prototype.getPreferredParents=function(pid,callback,noInternetCallback){""===pid?callback():this.getCurrentUser(function(userCallback){var currentId=userCallback.data.users[0].personId;fsApiClient.get("/platform/tree/users/"+currentId+"/preferred-parent-relationships/"+pid,function(error,Gdata){if(void 0!==error)console.log("no internet"),noInternetCallback();else{var parentsPreferredLocation=Gdata.headers.location;callback(void 0!==parentsPreferredLocation?parentsPreferredLocation.substring(parentsPreferredLocation.lastIndexOf("/")+1):"")}})},noInternetCallback)},fsApiUtils.prototype.getNotesByPersonId=function(pid,callback,noInternetCallback){""===pid?callback():fsApiClient.get("/platform/tree/persons/"+pid+"/notes",function(error,Gdata){var arrNotes=[];if(void 0!==error)console.log("no internet"),callback(arrNotes);else{if(200===Gdata.statusCode&&"undefined"!==Gdata.data.persons[0]){var person=Gdata.data.persons[0];"undefined"!==person.notes&&person.notes.forEach(function(laNote){arrNotes.push(laNote.text)})}callback(arrNotes)}})},fsApiUtils.prototype.getJSONFamiliesOfPersonId=function(pid,callback,errorCallback){""===pid?errorCallback():fsApiClient.get("/platform/tree/persons/"+pid+"/families",function(error,Gdata){200===Gdata.statusCode?void 0!==Gdata.data&&callback(!0,Gdata.data):404===Gdata.statusCode||403===Gdata.statusCode?(console.log("not found or not granted"),void 0!==errorCallback&&errorCallback(Gdata.statusCode,pid)):410===Gdata.statusCode||301===Gdata.statusCode?void 0!==errorCallback&&errorCallback(Gdata.statusCode,pid):401===Gdata.statusCode&&(console.log("token expired"),void 0!==errorCallback&&errorCallback(Gdata.statusCode,pid))})},fsApiUtils.prototype.getCurrentUser=function(callback,noInternetCallback,callbackError){var self=this;null===self.currentUser?fsApiClient.get("/platform/users/current",function(error,response){void 0!==error?(console.log("no internet"),noInternetCallback()):200===response.statusCode?(self.currentUser=response,void 0!==callback&&callback(response)):503===response.statusCode?void 0!==callbackError&&callbackError():(response.statusCode,void 0!==callbackError&&callbackError())}):callback(self.currentUser)},fsApiUtils.prototype.getAgent=function(pid){return new Promise(function(resolve,reject){""===pid?reject("no pid"):fsApiClient.get("/platform/users/agents/"+pid,function(error,Gdata){void 0!==error?reject(error):200===Gdata.statusCode?resolve(Gdata.data):reject(Gdata.statusCode)})})},fsApiUtils.prototype.searchPC=function(data,callback,errorCallback){param="";for(var keys=Object.keys(data),j=0;j<keys.length;j++)""===data[keys[j]]&&delete data[keys[j]];keys=Object.keys(data);for(var i=0;i<keys.length;i++){var separator=i<keys.length-1?"+":"";if("birthLikeDate"===keys[i]||"marriageDate"===keys[i]||"deathLikeDate"===keys[i])param+=keys[i]+':"'+data[keys[i]]+'~"'+separator;else if("givenName"===keys[i]||"surname"===keys[i]||"fatherGivenName"===keys[i]||"fatherSurname"===keys[i]||"motherGivenName"===keys[i]||"motherSurname"===keys[i]||"spouseGivenName"===keys[i]||"spouseSurname"===keys[i]){if(data[keys[i]].split(" ").length>1){var re=new RegExp(" ","g"),allName=data[keys[i]].trim().replace(re,"~"+separator);data[keys[i]]='"'+allName+'~"'+separator}else data[keys[i]]=data[keys[i]]+"~"+separator;param+=keys[i]+":"+data[keys[i]]}else"sexe"===keys[i]?param+="gender:"+this.sexeEnumFs[data[keys[i]]]+separator:"birthLikePlace"===keys[i]||"deathLikePlace"===keys[i]||"marriagePlace"===keys[i]?param+=keys[i]+':"'+data[keys[i]]+'~"'+separator:param+=keys[i]+":"+data[keys[i]]+'~"+'}""===param||"gender:~"===param?void 0!==errorCallback&&errorCallback(400):fsApiClient.get("/platform/tree/search?count="+this.PageSearchSize+"&q="+param,{headers:{Accept:"application/x-gedcomx-atom+json"}},function(error,response){void 0===error?200===response.statusCode?void 0!==callback&&("undefined"!=typeof callbackSupp?callback(!0,response,callbackSupp):callback(!0,response)):504===response.statusCode?void 0!==errorCallback&&errorCallback(response.statusCode):400===response.statusCode?void 0!==errorCallback&&errorCallback(response.statusCode):401===response.statusCode?void 0!==errorCallback&&errorCallback(response.statusCode):204===response.statusCode&&callback(!0,response):console.log(error)})},fsApiUtils.prototype.getUrl=function(indexRequest,url,callback,callbackError){var newData=!1,dataFormat="application/x-gedcomx-v1+json";"nextPageSearch"===indexRequest&&(newData=!1,dataFormat="application/x-gedcomx-atom+json"),fsApiClient.get(url,{headers:{Accept:dataFormat}},function(error,response){void 0===error&&(200===response.statusCode||204===response.statusCode?void 0!==callback&&callback(newData,response):504===response.statusCode?void 0!==callbackError&&callbackError(response.statusCode):401===response.statusCode&&void 0!==callbackError&&callbackError(response.statusCode))})},fsApiUtils.prototype.logout=function(callback,errorCallback){fsApiClient.post("/platform/logout",function(error,response){200===response.statusCode||204===response.statusCode?void 0!==callback&&callback():401===response.statusCode&&void 0!==errorCallback&&errorCallback(response.statusCode)})},fsApiUtils.prototype.getParents=function(pid,callback){fsApiClient.get("/platform/tree/persons/"+pid+"/parents",function(error,response){void 0!==callback&&callback(response)})},fsApiUtils.prototype.deleteAccessToken=function(){console.log("delete token "),fsApiClient.deleteAccessToken()},fsApiUtils.prototype.getMemories=function(pid,callback,errorCallback){""===pid?errorCallback():fsApiClient.get("/platform/tree/persons/"+pid+"/memories",function(error,Gdata){200===Gdata.statusCode?void 0!==Gdata.body&&(console.log(Gdata.body.length),callback(Gdata.body)):(Gdata.statusCode,callback(""))})},fsApiUtils.prototype.canReadOrdinances=function(){return new Promise(function(resolve,reject){fsApiClient.get("/platform/ordinances/ordinances",function(error,Gdata){void 0!==error?reject(error):403===Gdata.statusCode?reject("user not LDS - statusCode 403"):resolve("user LDS")})})},fsApiUtils.prototype.readOrdinances=function(pid){return new Promise(function(resolve,reject){""===pid?reject("missing pid"):fsApiClient.get("/platform/tree/persons/"+pid+"/ordinances",function(error,Gdata){if(200===Gdata.statusCode){var indi=Gdata.data.persons[0];if(null!=indi){var retour={};indi.ordinances.forEach(function(ordonnance){console.log("-------"),console.log(ordonnance.status),console.log(ordonnance.type),retour[ordonnance.type]=ordonnance}),resolve(retour)}else reject("individu with pid "+pid+" undefined")}else reject("status code : "+Gdata.statusCode)})})};